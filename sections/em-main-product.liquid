{% comment %}theme-check-disable TemplateLength{% endcomment %}
{{ 'section-main-product.css' | asset_url | stylesheet_tag }}
{{ 'component-accordion.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-rte.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-deferred-media.css' | asset_url }}" media="print" onload="this.media='all'">

<script src="{{ 'em-main-product.js' | asset_url }}" type="module"></script>
<script src="{{ 'em-product-form.js' | asset_url }}" type="module"></script>
<script src="{{ 'variant-metafields.js' | asset_url }}"></script>
{%- assign first_3d_model = product.media | where: "media_type", "model" | first -%}
{%- if first_3d_model -%}
  {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
  <link id="ModelViewerStyle" rel="stylesheet" href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css" media="print" onload="this.media='all'">
  <link id="ModelViewerOverride" rel="stylesheet" href="{{ 'component-model-viewer-ui.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{% comment %} Sets a flag based on whether this section includes a Custom Assortment block {% endcomment %}
{% liquid
  assign is_custom_assortment = false
  for block in section.blocks
    if block.type == 'custom_assortment'
      assign is_custom_assortment = true
      break
    endif
  endfor


%}

{%- comment -%} Sets a flag based on whether this product contains any alcohol {%- endcomment -%}
{% liquid
  assign product_contains_alcohol = false
  for block in section.blocks
    if block.type == 'alcohol_restrictions'
      assign product_tags_lowercase = product.tags | join: ',' | downcase | split: ','
      assign tag_name_lowercase = block.settings.tag_name | downcase

      if product_tags_lowercase contains tag_name_lowercase
        assign product_contains_alcohol = true
      endif

      break
    endif
  endfor
%}

{%- comment -%} Variant-Specific Images {%- endcomment -%}
{% liquid
  assign variant_images = product.images | where: "attached_to_variant?"

  assign image_metafields = section.settings.variant_images | newline_to_br | split: '<br />'
%}

{%- comment -%} PowerReviews Configuration {%- endcomment -%}
{% liquid
  assign displayPowerReviews = false
  if settings.power_reviews_api_key != blank and settings.power_reviews_group_id != blank and settings.power_reviews_merchant_id != blank
    assign displayPowerReviews = true
  endif
%}

<section
  class="page-width"
  x-data="product({
    data: {{ product | json | escape }},
    variantId: {{ product.selected_or_first_available_variant.id }},
    containsAlcohol: {{ product_contains_alcohol }},
    customAssortment: {{ is_custom_assortment }},
  })"
>
  <div class="product grid grid--1-col {% unless product.media.size > 0 %}product--no-media{% endunless %}">
    <div class="grid__item product__media-wrapper">
      {%- for variant in product.variants -%}
        <slider-component
          class="all-breakpoints slider-mobile-gutter"
          {% if variant.id != product.selected_or_first_available_variant %}
            x-cloak
          {% endif %}
          x-show="variantId === {{ variant.id }}"
        >
          <a class="skip-to-content-link button visually-hidden" href="#ProductInfo-{{ section.id }}">
            {{ "accessibility.skip_to_product_info" | t }}
          </a>
          <ul class="product__media-list grid grid--peek list-unstyled slider slider--mobile" role="list">
            {% assign modal_id = section.id | append: '-' | append: variant.id %}
            {%- if variant.featured_media != null -%}
              <li class="product__media-item grid__item slider__slide{% if media.media_type != 'image' %} product__media-item--full{% endif %}">
                {% render 'product-thumbnail', media: variant.featured_media, position: 'featured', loop: section.settings.enable_video_looping, modal_id: modal_id %}
              </li>
            {%- endif -%}

            {% assign counter = 1 %}

            {%- for metafield_namespace_key in image_metafields -%}
              {% liquid
                assign namespace = metafield_namespace_key | split: '.' | first | strip
                assign key = metafield_namespace_key | split: '.' | last | strip
                assign metafield_image = variant.metafields[namespace][key]
              %}
              {% if metafield_image.value and metafield_image.value.media_type == 'image' %}
                <li class="product__media-item grid__item slider__slide{% if media.media_type != 'image' %} product__media-item--full{% endif %}">
                  {% assign counter = counter | plus: 1 %}
                  {% render 'product-thumbnail', media: metafield_image.value, position: counter, loop: section.settings.enable_video_looping, modal_id: modal_id %}
                </li>
              {% endif %}
            {%- endfor -%}

            {%- for media in product.media -%}
              {%- unless variant_images contains media -%}
                <li class="product__media-item grid__item slider__slide{% if media.media_type != 'image' %} product__media-item--full{% endif %}">
                  {% assign counter = counter | plus: 1 %}
                  {% render 'product-thumbnail', media: media, position: counter, loop: section.settings.enable_video_looping, modal_id: modal_id %}
                </li>
              {%- endunless -%}
            {%- endfor -%}
          </ul>
          <div class="slider-buttons slider-buttons--overlay no-js-hidden{% if counter < 2 %} small-hide{% endif %}">
            <div class="slider-counter caption">
              <span class="slider-counter--current">1</span>
              <span aria-hidden="true"> / </span>
              <span class="visually-hidden">{{ 'accessibility.of' | t }}</span>
              <span class="slider-counter--total">{{ counter }}</span>
            </div>
            <button type="button" class="slider-button slider-button--prev" name="previous" aria-label="{{ 'accessibility.previous_slide' | t }}">{% render 'icon-caret' %}</button>
            <button type="button" class="slider-button slider-button--next" name="next" aria-label="{{ 'accessibility.next_slide' | t }}">{% render 'icon-caret' %}</button>
          </div>
        </slider-component>
      {%- endfor -%}

      {%- if first_3d_model -%}
        <button
          class="button button--full-width product__xr-button"
          type="button"
          aria-label="{{ 'products.product.xr_button_label' | t }}"
          data-shopify-xr
          data-shopify-model3d-id="{{ first_3d_model.id }}"
          data-shopify-title="{{ product.title | escape }}"
          data-shopify-xr-hidden
        >
          {% render 'icon-3d-model' %}
          {{ 'products.product.xr_button' | t }}
        </button>
      {%- endif -%}
    </div>
    <div class="product__info-wrapper grid__item">
      <div id="ProductInfo-{{ section.id }}" class="product__info-container{% if section.settings.enable_sticky_info %} product__info-container--sticky{% endif %}">
        {%- assign product_form_id = 'product-form-' | append: section.id -%}

        {%- for block in section.blocks -%}
          {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
          {%- when 'text' -%}
            <p class="product__text{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}" {{ block.shopify_attributes }}>
              {{- block.settings.text -}}
            </p>
          {%- when 'title' -%}
            <h1 class="product__title" {{ block.shopify_attributes }}>
              {{ product.title | escape }}
            </h1>
          {%- when 'price' -%}
            <div class="no-js-hidden" id="price-{{ section.id }}" {{ block.shopify_attributes }}>
              {%- render 'price', product: product, use_variant: true, show_badges: true, price_class: 'price--large' -%}
            </div>
            <div {{ block.shopify_attributes }}>
              {%- form 'product', product, id: 'product-form-installment', class: 'installment caption-large' -%}
                <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                {{ form | payment_terms }}
              {%- endform -%}
            </div>
          {%- when 'description' -%}
            {%- if product.description != blank -%}
              <div class="product__description rte">
                {{ product.description }}
              </div>
            {%- endif -%}
          {%- when 'custom_liquid' -%}
            {{ block.settings.custom_liquid }}
          {%- when 'collapsible_tab' -%}
            <div class="product__accordion accordion" {{ block.shopify_attributes }}>
              <details>
                <summary>
                  <div class="summary__title">
                    {% render 'icon-accordion', icon: block.settings.icon %}
                    <h2 class="h4 accordion__title">
                      {{ block.settings.heading | default: block.settings.page.title }}
                    </h2>
                  </div>
                  {% render 'icon-caret' %}
                </summary>
                <div class="accordion__content rte">
                  {{ block.settings.content }}
                  {{ block.settings.page.content }}
                </div>
              </details>
            </div>
          {%- when 'quantity_selector' -%}
            <div class="product-form__input product-form__quantity" {{ block.shopify_attributes }}>
              <label class="form__label" for="Quantity-{{ section.id }}">
                {{ 'products.product.quantity.label' | t }}
              </label>
              <quantity-input class="quantity">
                <button class="quantity__button no-js-hidden" name="minus" type="button">
                  <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>
                  {% render 'icon-minus' %}
                </button>
                <input class="quantity__input"
                    type="number"
                    name="quantity"
                    id="Quantity-{{ section.id }}"
                    min="1"
                    value="1"
                    form="product-form-{{ section.id }}"
                  >
                <button class="quantity__button no-js-hidden" name="plus" type="button">
                  <span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: product.title | escape }}</span>
                  {% render 'icon-plus' %}
                </button>
              </quantity-input>
            </div>
          {%- when 'popup' -%}
              <modal-opener class="product-popup-modal__opener no-js-hidden" data-modal="#PopupModal-{{ block.id }}" {{ block.shopify_attributes }}>
                <button id="ProductPopup-{{ block.id }}" class="product-popup-modal__button link" type="button" aria-haspopup="dialog">{{ block.settings.text | default: block.settings.page.title }}</button>
              </modal-opener>
              <a href="{{ block.settings.page.url }}" class="product-popup-modal__button link no-js">{{ block.settings.text }}</a>
          {%- when 'share' -%}
            <share-button class="share-button" {{ block.shopify_attributes }}>
              <button class="share-button__button hidden">
                {% render 'icon-share' %}
                {{ block.settings.share_label | escape }}
              </button>
              <details>
                <summary class="share-button__button">
                  {% render 'icon-share' %}
                  {{ block.settings.share_label | escape }}
                </summary>
                <div id="Product-share-{{ section.id }}" class="share-button__fallback motion-reduce">
                  <div class="field">
                    <span id="ShareMessage-{{ section.id }}" class="share-button__message hidden" role="status">
                    </span>
                    <input
                      type="text"
                      class="field__input"
                      id="url"
                      value="{{ shop.url | append: product.url }}"
                      placeholder="{{ 'general.share.share_url' | t }}"
                      onclick="this.select();"
                      readonly
                    >
                    <label class="field__label" for="url">{{ 'general.share.share_url' | t }}</label>
                  </div>
                  <button class="share-button__close hidden no-js-hidden">
                    {% render 'icon-close' %}
                    <span class="visually-hidden">{{ 'general.share.close' | t }}</span>
                  </button>
                  <button class="share-button__copy no-js-hidden">
                    {% render 'icon-clipboard' %}
                    <span class="visually-hidden">{{ 'general.share.copy_to_clipboard' | t }}</span>
                  </button>
                </div>
              </details>
            </share-button>
            <script src="{{ 'share.js' | asset_url }}" defer="defer"></script>
          {%- when 'variant_picker' -%}
            {%- unless product.has_only_default_variant -%}
              {%- if block.settings.picker_type == 'button' -%}
                <variant-radios class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                  {%- for option in product.options_with_values -%}
                      <fieldset class="js product-form__input {% if forloop.first == true %}variant-buttons-form {% endif %}">
                        <legend class="form__label">{{ option.name }}</legend>
                        {%- for value in option.values -%}
                          <input
                            type="radio" id="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}"
                            name="{{ option.name }}"
                            value="{{ value | escape }}"
                            form="product-form-{{ section.id }}"
                            {% if option.selected_value == value %}checked{% endif %}
                          >
                          <label for="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}">
                            {{ value }}
                          </label>
                        {%- endfor -%}
                      </fieldset>
                  {%- endfor -%}
                  <script type="application/json">
                    {{ product.variants | json }}
                  </script>
                </variant-radios>
              {%- else -%}
                <variant-selects class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                  {%- for option in product.options_with_values -%}
                    <div class="product-form__input product-form__input--dropdown">
                      <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                        {{ option.name }}
                      </label>
                      <div class="select">
                        <select id="Option-{{ section.id }}-{{ forloop.index0 }}"
                          class="select__select"
                          name="options[{{ option.name | escape }}]"
                          form="product-form-{{ section.id }}"
                        >
                          {%- for value in option.values -%}
                            <option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected"{% endif %}>
                              {{ value }}
                            </option>
                          {%- endfor -%}
                        </select>
                        {% render 'icon-caret' %}
                      </div>
                    </div>
                  {%- endfor -%}

                  <script type="application/json">
                    {{ product.variants | json }}
                  </script>
                </variant-selects>
              {%- endif -%}
            {%- endunless -%}

            <noscript>
              <div class="product-form__input{% if product.has_only_default_variant %} hidden{% endif %}">
                <label class="form__label" for="Variants-{{ section.id }}">{{ 'products.product.product_variants' | t }}</label>
                <div class="select">
                  <select name="id" id="Variants-{{ section.id }}" class="select__select" form="product-form">
                    {%- for variant in product.variants -%}
                      <option
                        {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %}
                        {% if variant.available == false %}disabled{% endif %}
                        value="{{ variant.id }}"
                      >
                        {{ variant.title }}
                        {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                        - {{ variant.price | money | strip_html }}
                      </option>
                    {%- endfor -%}
                  </select>
                  {% render 'icon-caret' %}
                </div>
              </div>
            </noscript>

          {%- when 'buy_buttons' -%}
          {% if block.settings.buy_button_placement == "description" %}
            <div {{ block.shopify_attributes }}>
              <product-form
                class="
                  product-form
                  {% if is_custom_assortment -%}
                    no-js-hidden
                  {%- endif %}
                "
                :aria-hidden="!addToCartEnabled"
              >
                {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
                  <input
                    type="hidden"
                    name="id"
                    value="{{ product.selected_or_first_available_variant.id }}"
                    @change="selectVariant($el.value)"
                  >
                  {% if cart.attributes[settings.cart_delivery_date_key] %}
                    <input
                      type="hidden"
                      name="properties[_delivery_date_selected]"
                      value="true"
                    />
                  {% endif %}
                  <div
                    class="product-form__buttons"
                  >
                    {%- comment -%} Ordergroove Offer {%- endcomment -%}
                    {%- if block.settings.ordergroove_offer_enabled -%}
                      <div class="em-ordergroove-container">
                        {%- render 'ordergroove_offer' product: product.selected_or_first_available_variant location: 'pdp' -%}
                      </div>
                    {%- endif -%}

                    <button
                      type="submit"
                      name="add"
                      class="
                        product-form__submit button button--full-width
                        {% if block.settings.show_dynamic_checkout and product.selling_plan_groups == empty %}
                          button--secondary
                        {% else %}
                          button--primary
                        {% endif %}
                      "
                      {% if product.selected_or_first_available_variant.available == false %}
                        disabled
                      {% endif %}
                    >
                      {%- if product.selected_or_first_available_variant.available -%}
                        {{ 'products.product.add_to_cart' | t }}
                      {%- else -%}
                        {{ 'products.product.sold_out' | t }}
                      {%- endif -%}
                    </button>
                    {%- if block.settings.show_dynamic_checkout -%}
                      {{ form | payment_button }}
                      {%- if block.settings.show_accelerated_message -%}
                        <p class="accelerated-checkout-message">{{ block.settings.accelerated_message }}</p>
                      {%- endif -%}
                    {%- endif -%}
                  </div>
                  <div class="tw">
                    <div class="absolute top-0 left-0 bottom-0 right-0 bg-background opacity-50 cursor-not-allowed outline-white z-[1]"
                      x-show="!addToCartEnabled"
                      @click="function() {}">
                    </div>
                  </div>
                {%- endform -%}
              </product-form>

              {% if is_custom_assortment %}
                <noscript>
                  Javascript must be enabled to purchase this product
                </noscript>
              {% endif %}

              {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

              {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities | where: 'pick_up_enabled', true -%}

              <pickup-availability class="product__pickup-availabilities no-js-hidden"
                {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %} available{% endif %}
                data-base-url="{{ shop.url }}{{ routes.root_url }}"
                data-variant-id="{{ product.selected_or_first_available_variant.id }}"
                data-has-only-default-variant="{{ product.has_only_default_variant }}"
              >
                <template>
                  <pickup-availability-preview class="pickup-availability-preview">
                    {% render 'icon-unavailable' %}
                    <div class="pickup-availability-info">
                      <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
                      <button class="pickup-availability-button link link--text underlined-link">{{ 'products.product.pickup_availability.refresh' | t }}</button>
                    </div>
                  </div>
                </template>
              </pickup-availability>
            </div>

            <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
          {% endif %}

          {%- comment -%} On a Liqueur PDP, a checkbox to confirm age and state should appear if the product has a specific tag {%- endcomment -%}
          {%- when 'alcohol_restrictions' -%}
            {%- if product_contains_alcohol -%}
              <div class="tw">
                <label class="first-p-inline text-primary cursor-pointer block">
                  <input
                    type="checkbox"
                    x-model="alcoholRestrictionsAccepted"
                  />
                  {{ block.settings.product_condition }}
                </label>
              </div>
            {%- endif -%}
          {%- when 'power_reviews_plugin' -%}
              {%- if block.settings.pr_snippet_enabled -%}
                {%- if settings.enabled_pr_display_container == true and displayPowerReviews == true -%}
                  <div class="em-pwr-container">
                    {% render 'pr-reviewsnippet' %}
                  </div>
                {%- else -%}
                  {% if request.design_mode %}
                    <span>Please make sure the API Key, Locale, Group ID, and Merchant ID are correct</span>
                  {% endif %}
                {%- endif -%}
              {%- endif -%}
            {%- when 'variant_sku' -%}
              <div class="em-variant-sku">
                {%- for variant in product.variants -%}
                  <h4 class="{%- if variant.id != product.selected_or_first_available_variant.id -%}hidden{%- endif -%}"
                      :class="{ 'hidden': {{ variant.id }} !== variantId }" 
                      data-metafield="{{variant.metafields.my_fields.nutritional_information}}"
                      data-id="{{variant.id}}"
                      >
                      {{ block.settings.variant_label }}{{ variant.sku }}
                  </h4>
                {%- endfor -%}
              </div>

          {%- endcase -%}
        {%- endfor -%}
      </div>
    </div>
  </div>

  {% comment %} Custom Assortment {% endcomment %}
  {% for block in section.blocks %}
    {% case block.type %}
    {% when 'custom_assortment' %}
      {% if block.settings.flavors != blank %}
        {% liquid
          assign flavor_category_all = block.settings.flavor_category_all

          assign available_flavors_json = ''
          assign categories = flavor_category_all | append: ', '

          for variant in block.settings.flavors.variants
            if variant.metafields.my_fields.flavor_enabled != false
              assign categories = categories | append: variant.option2

              capture available_flavors_json
                echo available_flavors_json
                echo variant.id | append: ': {'
                echo variant | json | prepend: '...' | append: ','
                echo variant.image | img_url: '200x200' | prepend: 'thumbnail: "' | append: '",'
                echo '},'
              endcapture

              if forloop.last != true
                assign categories = categories | append: ', '
              endif
            endif
          endfor

          assign available_flavors_json = available_flavors_json | prepend: '{' | append: '}'
          assign categories = categories | split: ', ' | uniq

          assign current_box_size = product.selected_or_first_available_variant.option1 | strip
          assign current_flavor_limit = 4
          assign max_flavors = 8

          assign limits = block.settings.flavors_per_box_size | newline_to_br | split: '<br />'

          for line in limits
            assign box_size = line | split: '=' | first | strip
            assign flavor_limit = line | split: '=' | last | strip

            if box_size == current_box_size
              assign current_flavor_limit = flavor_limit | times: 1
              break
            endif
          endfor

        %}
        <script src="{{ 'em-custom-assortment.js' | asset_url }}" type="module"></script>
        <div
          {{ block.shopify_attributes }}
          class="tw"
          x-data="customAssortment({
            flavors: {{ available_flavors_json | escape }},
            initBoxSize: {{ current_box_size | json | escape }},
            initFlavorLimit: {{ current_flavor_limit }},
            categories: {{ categories | json | escape }},
            liqueurCategory: {{ block.settings.flavor_category_liqueur | json | escape }},
            flavorsPerBoxSize: {{ block.settings.flavors_per_box_size | json | escape }},
          })"
          x-bind="directives.self"
        >
          {% comment %} These forms must exist such that line item attributes are inserted by the Add to Cart button {% endcomment %}
          <input
            type="hidden"
            x-bind="directives.lineItemProperties.flavors"
            name="properties[Flavors]"
            form="{{ product_form_id }}"
          />
          <input
            type="hidden"
            x-bind="directives.lineItemProperties.skus"
            name="properties[_skus]"
            form="{{ product_form_id }}"
          />
          {% comment %} Heading {% endcomment %}
          <div class="mt-8">
            {% comment %} Count/Total Display {% endcomment %}
            <div class="center mb-10">
              <h2 class="text-primary text-5xl font-heading">Select up to <span x-text="limit">{{ current_flavor_limit }}</span> varieties of Chocolate</h2>
              (<span x-text="count">0</span> of <span x-text="limit">{{ current_flavor_limit }}</span>) Chocolates varieties in your box<br>
              Select your favorite pieces. To shift the ratio, select your favorite pieces multiple times.
            </div>
            {% comment %} Clear Button {% endcomment %}
            <div class="flex justify-end">
                <button
                  :disabled="count === 0"
                  @click.prevent="clear()"
                  class="block mt-auto hover:opacity-50 transition-opacity"
                >
                  Clear All
                </button>
              </div>
          </div>
          {% comment %} Selection Slots {% endcomment %}
          {% liquid
            assign grid_8pc = 'grid-cols-4 lg:grid-cols-8'
            assign grid_6pc = 'grid-cols-3 lg:grid-cols-6'
            assign grid_4pc = 'grid-cols-4'

            case current_flavor_limit
            when 8
              assign current_grid = grid_8pc
            when 6
              assign current_grid = grid_6pc
            else
              assign current_grid = grid_4pc
            endcase
          %}
          <ol
            class="grid gap-4 justify-center {{ current_grid }}"
            :class="{
              '{{ grid_8pc }}' : limit === 8,
              '{{ grid_6pc }}' : limit === 6,
              '{{ grid_4pc }}' : limit === 4,
            }"
            transition.opacity
          >
            {% for index in (1..max_flavors) %}
              <li
                x-data="selection({{ index | minus: 1 }})"
                class="bg-background text-on-background relative z-0 flex flex-col justify-center items-center border-2 border-dashed border-surface p-6 text-center min-h-[21rem]"
                {% if index > current_flavor_limit %}
                  x-cloak
                {% endif %}
                x-show="{{ index }} <= limit"
                :class="{
                  'border-dashed border-surface': !selected,
                  'border-primary border-solid': selected,
                }"
              >
                <svg
                  x-show="!selected"
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-12 w-12 text-primary"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7" />
                </svg>

                <modal-opener
                  x-cloak
                  x-show="selected"
                  aria-hidden="true"
                  :aria-hidden="!selected"
                  :data-modal="`#PieceModal-${id}`"
                >
                  <button
                    :id="`SelectionPopup-${id}`"
                    :data-media-id="id"
                    class="relative group block w-full aspect-w-10 aspect-h-7 overflow-hidden cursor-zoom-in"
                    type="button"
                    aria-haspopup="dialog"
                  >
                    <img
                      :src="thumbnail"
                      :alt="name"
                      loading="lazy"
                      width="100"
                      height="100"
                      class="object-cover pointer-events-none mx-auto"
                    >
                  </button>
                </modal-opener>

                <span class="mt-2 block text-xl font-medium tracking-normal">
                  <span x-show="!selected">
                    {% if forloop.first %}
                      Choose your first chocolate
                    {% else %}
                      Optional:<br/>
                      Choose another chocolate
                    {% endif %}
                  </span>
                  <span
                    x-show="selected"
                    x-text="name"
                  >
                  </span>
                </span>

                <button
                  class="absolute flex top-0 right-0 p-2 z-10 opacity-30 hover:opacity-100 transition-opacity"
                  x-cloak
                  x-show="selected"
                  @click="removeByIndex({{ index | minus: 1 }})"
                >
                  {% render 'em-icon-outline-x' class: 'inline-block' %}
                </button>
              </li>
            {% endfor %}
          </ol>

          <!-- Second Buy Button -->
          {% for block in section.blocks %}
            {% case block.type %}
              {%- when 'buy_buttons' -%}
              {% if block.settings.buy_button_placement == "selections" %}
              <div {{ block.shopify_attributes }}>
                <product-form
                  class="
                    product-form
                    {% if is_custom_assortment -%}
                      no-js-hidden
                    {%- endif %}
                  "
                  :aria-hidden="!addToCartEnabled"
                >
                  {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
                    <input
                      type="hidden"
                      name="id"
                      value="{{ product.selected_or_first_available_variant.id }}"
                      @change="selectVariant($el.value)"
                    >
                    {% if cart.attributes[settings.cart_delivery_date_key] %}
                      <input
                        type="hidden"
                        name="properties[_delivery_date_selected]"
                        value="true"
                      />
                    {% endif %}
                    <div
                      class="product-form__buttons"
                    >
                      {%- comment -%} Ordergroove Offer {%- endcomment -%}
                      {%- if block.settings.ordergroove_offer_enabled -%}
                        <div class="em-ordergroove-container">
                          {%- render 'ordergroove_offer' product: product.selected_or_first_available_variant location: 'pdp' -%}
                        </div>
                      {%- endif -%}

                      <button
                        type="submit"
                        name="add"
                        class="
                          product-form__submit button button--full-width button--primary bg-primary text-on-primary md:max-w-[36rem] md:ml-auto
                          {% if block.settings.show_dynamic_checkout and product.selling_plan_groups == empty %}
                            button--secondary
                          {% else %}
                            button--primary
                          {% endif %}
                        "
                        {% if product.selected_or_first_available_variant.available == false %}
                          disabled
                        {% endif %}
                      >
                        {%- if product.selected_or_first_available_variant.available -%}
                          {{ 'products.product.add_to_cart' | t }}
                        {%- else -%}
                          {{ 'products.product.sold_out' | t }}
                        {%- endif -%}
                      </button>
                      {%- if block.settings.show_dynamic_checkout -%}
                        {{ form | payment_button }}
                      {%- endif -%}
                    </div>
                    <div class="tw">
                      <div class="absolute top-0 left-0 bottom-0 right-0 bg-background opacity-50 cursor-not-allowed outline-white z-[1]"
                        x-show="!addToCartEnabled"
                        @click="function() {}">
                      </div>
                    </div>
                  {%- endform -%}
                </product-form>

                {% if is_custom_assortment %}
                  <noscript>
                    Javascript must be enabled to purchase this product
                  </noscript>
                {% endif %}

                {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

                {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities | where: 'pick_up_enabled', true -%}

                <pickup-availability class="product__pickup-availabilities no-js-hidden"
                  {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %} available{% endif %}
                  data-base-url="{{ shop.url }}{{ routes.root_url }}"
                  data-variant-id="{{ product.selected_or_first_available_variant.id }}"
                  data-has-only-default-variant="{{ product.has_only_default_variant }}"
                >
                  <template>
                    <pickup-availability-preview class="pickup-availability-preview">
                      {% render 'icon-unavailable' %}
                      <div class="pickup-availability-info">
                        <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
                        <button class="pickup-availability-button link link--text underlined-link">{{ 'products.product.pickup_availability.refresh' | t }}</button>
                      </div>
                    </div>
                  </template>
                </pickup-availability>
              </div>

              <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
              {% endif %}
            {%- endcase -%}
          {%- endfor -%}
          <!-- End Second Buy Button -->

          {% comment %} Filters {% endcomment %}
          <nav class="flex mb-10 pt-10" x-ref="filters" aria-label="Tabs">
            <span class="flex flex-wrap relative">
              {% for category in categories %}
                {% liquid
                  assign selected_tab_classes = 'bg-secondary text-on-secondary cursor-default'
                  assign unselected_tab_classes = 'bg-transparent text-on-background underline'
                %}
                <button
                  href="#"
                  class="
                    leading-5 font-medium p-4
                    {% if category == flavor_category_all %}
                      font-bold
                    {% endif %}
                  "
                  @click="filterBy = {{ category | json | escape }}"
                  :disabled="filterBy === '{{ category | escape }}'"
                  :class="{
                    '{{ selected_tab_classes }}': filterBy === '{{ category | escape }}',
                    '{{ unselected_tab_classes }}': filterBy !== '{{ category | escape }}'
                  }"
                >
                  {{ category }}
                </button>
              {% endfor %}
            </span>
          </nav>

          {% comment %} Flavor Selector {% endcomment %}
          <div class="relative pb-40">
            <ul
              role="list"
              class="m-0 grid gap-4 grid-cols-3 xs:grid-cols-4 sm:grid-cols-5 md:grid-cols-7 lg:grid-cols-9 xl:grid-cols-11"
            >
              {% for variant in block.settings.flavors.variants %}
                {% if variant.metafields.my_fields.flavor_enabled != false %}
                  {% liquid
                    assign has_liqueur = false
                    if variant.option2 contains block.settings.flavor_category_liqueur
                      assign has_liqueur = true
                    endif
                  %}
                  <li
                    x-ref="{{ variant.id }}"
                    x-data="flavor({
                      id: {{ variant.id }},
                      categories: {{ flavor_category_all | append: ', ' | append: variant.option2 | split: ', ' | uniq | json | escape }},
                      inStock: {{ variant.available }},
                      hasLiqueur: {{ has_liqueur }},
                      thumbnail: '{{ variant.image | img_url: '200x200' }}',
                    })"
                    x-bind="directives.self"
                    class="flex flex-col relative h-full"
                  >
                    <modal-opener data-modal="#PieceModal-{{ variant.id }}">
                      <button
                        id="PiecePopup-{{ block.id }}"
                        data-media-id="{{ variant.id }}"
                        class="relative group block w-full aspect-w-10 aspect-h-7 overflow-hidden cursor-zoom-in" type="button" aria-haspopup="dialog"
                      >
                        <img
                          src="{{ variant.image | img_url: '200x200' }}"
                          alt="{{ variant.option1 }}"
                          loading="lazy"
                          width="100"
                          height="100"
                          class="object-cover pointer-events-none mx-auto"
                        >
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 m-3 absolute top-0 right-0 cursor-pointer opacity-30 hover:opacity-100" viewBox="0 0 20 20" fill="currentColor">
                          <path d="M5 8a1 1 0 011-1h1V6a1 1 0 012 0v1h1a1 1 0 110 2H9v1a1 1 0 11-2 0V9H6a1 1 0 01-1-1z" />
                          <path fill-rule="evenodd" d="M2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8zm6-4a4 4 0 100 8 4 4 0 000-8z" clip-rule="evenodd" />
                        </svg>
                      </button>
                    </modal-opener>

                    <p class="block center flex-grow mt-2 text-xl font-medium tracking-normal	pointer-events-none" style="min-height: 36px">
                      {{ variant.option1 }}
                    </p>

                    <div class="center mt-2 flex justify-center w-full max-w-11 ml-auto mr-auto">
                      {% if has_liqueur %}
                        <button
                          x-bind="directives.moreInfo"
                          class="w-full h-11 bg-secondary text-on-secondary uppercase text-base font-semibold leading-[2.8rem] overflow-y-hidden"
                        >
                          More Info
                        </button>
                      {% endif %}
                      {% if variant.available %}
                        <button
                          {% if has_liqueur %}
                            x-cloak
                          {% endif %}
                          x-bind="directives.add"
                          class="chocolateAddButton w-full h-11 bg-primary text-on-primary uppercase text-base font-semibold leading-[2.8rem] overflow-y-hidden disabled:opacity-80 disabled:cursor-not-allowed"
                          title="{{variant.title}}"
                          image="{{variant.image | img_url: '200x200'}}"
                        >
                          Add <span class="whitespace-nowrap">to Box</span>
                        </button>
                      {% else %}
                        <button
                          {% if has_liqueur %}
                            x-cloak
                          {% endif %}
                          {% if variant.available == false %}
                            disabled
                          {% endif %}
                          x-bind="directives.add"
                          class="w-full h-11 bg-surface text-on-surface uppercase text-base font-semibold leading-[2.8rem] overflow-y-hidden cursor-not-allowed"
                        >
                          Out <span class="whitespace-nowrap">of Stock</span>
                        </button>
                      {% endif %}
                      <button
                        x-cloak
                        x-bind="directives.minus"
                        class="w-4/12 h-11 flex justify-center items-center bg-primary text-on-primary uppercase text-base font-semibold"
                      >
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
                        </svg>
                      </button>
                      <span
                        x-cloak
                        x-bind="directives.count"
                        class="w-4/12 center border-primary border-t border-b uppercase text-2xl leading-10 font-heading font-medium h-11"
                      >
                      </span>
                      <button
                        x-cloak
                        x-bind="directives.plus"
                        class="w-4/12 h-11 flex justify-center items-center bg-primary text-on-primary uppercase text-base font-semibold"
                      >
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                        </svg>
                      </button>
                    </div>
                  </li>
                {% endif %}
              {% endfor %}
            </ul>
            {% comment %} Alcohol Restrictions Notice {% endcomment %}
            <aside
              x-cloak
              x-bind="directives.alcoholRestrictions"
              class="absolute inset-0 bg-background bg-opacity-90 backdrop-blur flex flex-col justify-top items-center p-10"
            >
              <div class="max-w-[40rem] text-left text-primary">
                <p>{{ block.settings.alcohol_restrictions_notice }}</p>
                <div class="text-center">
                  <button
                    @click="alcoholRestrictionsAccepted = true"
                    class="bg-primary text-on-primary font-semibold py-2 px-8 mt-8"
                  >
                    Accept
                  </button>
                </div>
              <div>
            </aside>
          </div>
        </div>

        {% comment %} Pieces Modals {% endcomment %}
        {% for variant in block.settings.flavors.variants %}
          {% if variant.metafields.my_fields.flavor_enabled != false %}
            <product-modal id="PieceModal-{{ variant.id }}" class="product-media-modal">
              <div class="product-media-modal__dialog" role="dialog" aria-label="{{ 'products.modal.label' | t }}" aria-modal="true" tabindex="-1">
                <button id="ModalClose-{{ variant.id }}" type="button" class="product-media-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}</button>

                <div class="product-media-modal__content" role="document" aria-label="{{ 'products.modal.label' | t }}" tabindex="0">
                  <div
                    data-media-id="{{ variant.id }}"
                    style="width: 100%; max-width: 750px; border: none;"
                    class="tw"
                  >
                    <h3 class="text-heading text-4xl pt-20 pb-10 px-32 md:px-10 text-center uppercase font-normal tracking-widest">{{ variant.option1 }}</h3>
                    <p class="text-body text-3xl px-10">{{ variant.metafields.my_fields.description }}</p>
                    <img
                      src="{{ variant.image | img_url: '750x' }}"
                      alt="{{ variant.option1 | escape }}"
                      loading="lazy"
                      width="750"
                      height="{{ 750 | divided_by: variant.image.aspect_ratio | ceil }}"
                      style="width: 100%; max-width: 750px; height: auto"
                    >
                    <p class="text-body p-10">{{ variant.metafields.my_fields.nutritional_information }}</p>
                  </div>
                </div>
              </div>
            </product-modal>
          {% endif %}
        {% endfor %}
      {% elsif request.design_mode %}
        You must configure this block with a product source for piece variants.
      {% endif %}
    {% endcase %}
  {%- endfor -%}

  {%- render 'cart-notification' -%}

  {%- for variant in product.variants -%}
    <product-modal id="ProductModal-{{ section.id }}-{{ variant.id }}" class="product-media-modal">
      <div class="product-media-modal__dialog" role="dialog" aria-label="{{ 'products.modal.label' | t }}" aria-modal="true" tabindex="-1">
        <button id="ModalClose-{{ section.id }}-{{ variant.id }}" type="button" class="product-media-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">
          {% render 'icon-close' %}
        </button>

        <div class="product-media-modal__content" role="document" aria-label="{{ 'products.modal.label' | t }}" tabindex="0">
          {%- if variant.featured_media != null -%}
            <img
              srcset="{%- if variant.featured_media.width >= 550 -%}{{ variant.featured_media | img_url: '550x' }} 550w,{%- endif -%}
                      {%- if variant.featured_media.width >= 1100 -%}{{ variant.featured_media | img_url: '1100x' }} 1100w,{%- endif -%}
                      {%- if variant.featured_media.width >= 1680 -%}{{ variant.featured_media | img_url: '1680x' }} 1680w,{%- endif -%}
                      {%- if variant.featured_media.width >= 1920 -%}{{ variant.featured_media | img_url: '1920x' }} 1920w,{%- endif -%}
                      {%- if variant.featured_media.width >= 2048 -%}{{ variant.featured_media | img_url: '2048x' }} 2048w,{%- endif -%}
                      {%- if variant.featured_media.width >= 4096 -%}{{ variant.featured_media | img_url: '4096x' }} 4096w{%- endif -%}"
              sizes="(min-width: 750px) calc(100vw - 12rem), 100vw"
              src="{{ variant.featured_media | img_url: '750x' }}"
              alt="{{ variant.featured_media.alt | escape }}"
              loading="lazy"
              width="1100"
              height="{{ 1100 | divided_by: variant.featured_media.aspect_ratio | ceil }}"
              data-media-id="{{ variant.featured_media.id }}"
            >
          {%- endif -%}

          {%- for metafield_namespace_key in image_metafields -%}
            {% liquid
              assign namespace = metafield_namespace_key | split: '.' | first | strip
              assign key = metafield_namespace_key | split: '.' | last | strip
              assign metafield_image = variant.metafields[namespace][key]
            %}
            {% if metafield_image.value and metafield_image.value.media_type == 'image' %}
              <img
                srcset="{%- if metafield_image.value.width >= 550 -%} {{ metafield_image.value | img_url: '550x' }} 550w,{%- endif -%}
                        {%- if metafield_image.value.width >= 1100 -%}{{ metafield_image.value | img_url: '1100x' }} 1100w,{%- endif -%}
                        {%- if metafield_image.value.width >= 1680 -%}{{ metafield_image.value | img_url: '1680x' }} 1680w,{%- endif -%}
                        {%- if metafield_image.value.width >= 1920 -%}{{ metafield_image.value | img_url: '1920x' }} 1920w,{%- endif -%}
                        {%- if metafield_image.value.width >= 2048 -%}{{ metafield_image.value | img_url: '2048x' }} 2048w,{%- endif -%}
                        {%- if metafield_image.value.width >= 4096 -%}{{ metafield_image.value | img_url: '4096x' }} 4096w{%- endif -%}"
                sizes="(min-width: 750px) calc(100vw - 12rem), 100vw"
                src="{{ metafield_image.value | img_url: '750x' }}"
                alt="{{ metafield_image.value.alt | escape }}"
                loading="lazy"
                width="1100"
                height="{{ 1100 | divided_by: metafield_image.value.aspect_ratio | ceil }}"
                data-media-id="{{ metafield_image.value.id }}"
              >
            {% endif %}
          {%- endfor -%}

          {%- for image in product.images -%}
            {%- unless variant_images contains image -%}
              <img
                srcset="{%- if image.width >= 550 -%}{{ image | img_url: '550x' }} 550w,{%- endif -%}
                        {%- if image.width >= 1100 -%}{{ image | img_url: '1100x' }} 1100w,{%- endif -%}
                        {%- if image.width >= 1680 -%}{{ image | img_url: '1680x' }} 1680w,{%- endif -%}
                        {%- if image.width >= 1920 -%}{{ image | img_url: '1920x' }} 1920w,{%- endif -%}
                        {%- if image.width >= 2048 -%}{{ image | img_url: '2048x' }} 2048w,{%- endif -%}
                        {%- if image.width >= 4096 -%}{{ image | img_url: '4096x' }} 4096w{%- endif -%}"
                sizes="(min-width: 750px) calc(100vw - 12rem), 100vw"
                src="{{ image | img_url: '750x' }}"
                alt="{{ image.alt | escape }}"
                loading="lazy"
                width="1100"
                height="{{ 1100 | divided_by: image.aspect_ratio | ceil }}"
                data-media-id="{{ image.id }}"
              >
            {%- endunless -%}
          {%- endfor -%}

          {%- for media in product.media -%}
            {%- unless variant_images contains image -%}
              {%- unless media.media_type == 'image' -%}
                {%- if media.media_type == 'model' -%}
                  <div class="product-media-modal__model" data-media-id="{{ media.id }}">
                    <product-model class="deferred-media media media--transparent" style="padding-top: min(calc(100vh - 12rem), 100%)">
                {%- else -%}
                  <deferred-media class="deferred-media media" style="padding-top: min(calc(100vh - 12rem), {{ 1 | divided_by: media.aspect_ratio | times: 100 }}%)" data-media-id="{{ media.id }}">
                {%- endif -%}
                  <button id="Deferred-Poster-Modal-{{ media.id }}" class="deferred-media__poster" type="button">
                    <span class="deferred-media__poster-button motion-reduce">
                      {%- if media.media_type == 'model' -%}
                        {%- render 'icon-3d-model' -%}
                      {%- else -%}
                        {%- render 'icon-play' -%}
                      {%- endif -%}
                    </span>
                    <img
                      srcset="{% if media.preview_image.width >= 288 %}{{ media.preview_image | img_url: '288x' }} 288w,{% endif %}
                              {% if media.preview_image.width >= 576 %}{{ media.preview_image | img_url: '576x' }} 576w,{% endif %}
                              {% if media.preview_image.width >= 750 %}{{ media.preview_image | img_url: '750x' }} 750w,{% endif %}
                              {% if media.preview_image.width >= 1100 %}{{ media.preview_image | img_url: '1100x' }} 1100w,{% endif %}
                              {% if media.preview_image.width >= 1500 %}{{ media.preview_image | img_url: '1500x' }} 1500w{% endif %}"
                      src="{{ media | img_url: '550x550' }}"
                      sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 2 }}px, (min-width: 750px) calc((100vw - 11.5rem) / 2), calc(100vw - 4rem)"
                      loading="lazy"
                      width="576"
                      height="{{ 576 | divided_by: media.preview_image.aspect_ratio }}"
                      alt="{{ media.preview_image.alt | escape }}"
                    >
                  </button>
                  <template>
                    {%- case media.media_type -%}
                    {%- when 'external_video' -%}
                      {%- assign video_class = 'js-' | append: media.host -%}
                      {%- if media.host == 'youtube' -%}
                        {{ media | external_video_url: autoplay: true, loop: section.settings.enable_video_looping, playlist: media.external_id | external_video_tag: class: video_class, loading: "lazy" }}
                      {%- else -%}
                        {{ media | external_video_url: autoplay: true, loop: section.settings.enable_video_looping | external_video_tag: class: video_class, loading: "lazy" }}
                      {%- endif -%}
                    {%- when 'video' -%}
                      {{ media | media_tag: image_size: "2048x", autoplay: true, loop: section.settings.enable_video_looping, controls: true, preload: "none", autoplay: true }}
                    {%- when 'model' -%}
                      {{ media | media_tag: image_size: "2048x", toggleable: true }}
                    {%- endcase -%}
                  </template>

                {%- if media.media_type == 'model' -%}
                    </product-model>
                    <button
                      class="button button--full-width product__xr-button"
                      type="button"
                      aria-label="{{ 'products.product.xr_button_label' | t }}"
                      data-shopify-xr
                      data-shopify-model3d-id="{{ media.id }}"
                      data-shopify-title="title"
                      data-shopify-xr-hidden
                      >
                      {% render 'icon-3d-model' %}
                      {{ 'products.product.xr_button' | t }}
                    </button>
                  </div>
                {%- else -%}
                  </deferred-media>
                {%- endif -%}
              {%- endunless -%}
            {%- endunless -%}
          {%- endfor -%}
        </div>
      </div>
    </product-modal>
  {%- endfor -%}

  {% assign popups = section.blocks | where: "type", "popup" %}
  {%- for block in popups -%}
    <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
      <div role="dialog" aria-label="{{ block.settings.text }}" aria-modal="true" class="product-popup-modal__content" tabindex="-1">
        <button id="ModalClose-{{ block.id }}" type="button" class="product-popup-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}</button>
        <div class="product-popup-modal__content-info">
          <h1 class="h2">{{ block.settings.page.title }}</h1>
          {{ block.settings.page.content }}
        </div>
      </div>
    </modal-dialog>
  {%- endfor -%}
</section>

{% javascript %}
  class ProductModal extends ModalDialog {
    constructor() {
      super();
    }

    hide() {
      super.hide();
      window.pauseAllMedia();
    }

    show(opener) {
      super.show(opener);
      this.showActiveMedia();
    }

    showActiveMedia() {
      this.querySelectorAll(`[data-media-id]:not([data-media-id="${this.openedBy.getAttribute("data-media-id")}"])`).forEach((element) => {
          element.classList.remove('active');
        }
      )
      const activeMedia = this.querySelector(`[data-media-id="${this.openedBy.getAttribute("data-media-id")}"]`);
      if (activeMedia === null) return;

      activeMedia.classList.add('active');
      activeMedia.scrollIntoView();

      const container = this.querySelector('[role="document"]');
      container.scrollLeft = (activeMedia.width - container.clientWidth) / 2;

      if (activeMedia.nodeName == 'DEFERRED-MEDIA' && activeMedia.querySelector('template')?.content?.querySelector('.js-youtube'))
        activeMedia.loadContent();
    }
  }

  customElements.define('product-modal', ProductModal);
{% endjavascript %}

{%- if first_3d_model -%}
  <script type="application/json" id="ProductJSON-{{ product.id }}">
    {{ product.media | where: 'media_type', 'model' | json }}
  </script>

  <script src="{{ 'product-model.js' | asset_url }}" defer></script>
{%- endif -%}

{% schema %}
{
  "name": "Ethel M Product Info",
  "tag": "section",
  "class": "product-section spaced-section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.main-product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.main-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        },
        {
          "type": "checkbox",
          "id": "ordergroove_offer_enabled",
          "label": "Ordergroove Offer",
          "default": true,
          "info": "Enable this checkbox to show the Ordergroove offer codes snippet."
        },
        {
          "type": "checkbox",
          "id": "show_accelerated_message",
          "label": "Show Accelerated Message",
          "default": true,
          "info": "Enable this checkbox to show the accelerated checkout message."
        },
        {
          "type": "text",
          "id": "accelerated_message",
          "label": "Accelerated Checkout Message",
          "default": "Add a Gift Message or Request a Specific Delivery Date on the Cart Page"
        },
        {
          "type": "select",
          "id": "buy_button_placement",
          "label": "Buy Button Placement",
          "options": [
            {
              "value": "description",
              "label": "Description Block"
            },
            {
              "value": "selections",
              "label": "Below Custom Selections"
            }
          ],
          "default": "description"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "share",
      "name": "t:sections.main-product.blocks.share.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-product.blocks.share.settings.text.label",
          "default": "Share"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.featured_image_info.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.title_info.content"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.main-product.blocks.custom_liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.label",
          "info": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Collapsible tab",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        }
      ]
    },
    {
      "type": "popup",
      "name": "t:sections.main-product.blocks.popup.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Pop-up link text",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        }
      ]
    },
    {
      "type": "custom_assortment",
      "name": "Custom Gift",
      "limit": 1,
      "settings": [
        {
          "type": "product",
          "id": "flavors",
          "label": "Flavors Product",
          "info": "The variants for this product will be used as the flavors that can be selected for a custom assortment."
        },
        {
          "type": "textarea",
          "id": "flavors_per_box_size",
          "label": "Flavors per Box Size",
          "default": "12pc=4\n16pc=4\n14-24pc=6\n24pc=6\n28-50pc=8\n32pc=8\n40pc=8",
          "info": "Specify how many flavors are allowed per box size with the following formula: \nOption1 Value=max_flavors\nNote: One per line, no spaces around equals sign."
        },
        {
          "type": "text",
          "id": "flavor_category_all",
          "label": "All Flavours Category",
          "default": "View All",
          "info": "The name of the category which shows all available flavors."
        },
        {
          "type": "text",
          "id": "flavor_category_liqueur",
          "label": "Liqueur Category",
          "default": "Crème Liqueurs",
          "info": "The name of the category which is considered to contain Liqueur-based flavors, for the purpose of showing the Alcohol Restrictions notice."
        },
        {
          "type": "richtext",
          "id": "alcohol_restrictions_notice",
          "label": "Alcohol Restrictions Notice",
          "default": "<p><strong>Some of these chocolates contain alcohol, restrictions apply.</strong> Please confirm that you are 21+ years old and the delivery is to AR, AZ, CA, CO, DE, FL, HI, IL, IA, KY, LA, MD, MN, MO, NC, NE, NH, NV, NJ, NY, OR, TX, VA, WA, or WV.</p>"
        }
      ]
    },
    {
      "type": "alcohol_restrictions",
      "name": "Alcohol Restrictions",
      "settings": [
        {
          "type": "text",
          "id": "tag_name",
          "label": "Tag Name",
          "info": "Liqueur Checkbox will render if product contains the liqueur tag."
        },
        {
          "type": "richtext",
          "id": "product_condition",
          "label": "Product Condition",
          "default": "<p>Some of these chocolates contain alcohol, restrictions apply. Please confirm that you are 21+ years old and the delivery is to AR, AZ, CA, CO, DE, FL, HI, IL, IA, KY, LA, MD, MN, MO, NC, NE, NH, NV, NJ, NY, OR, TX, VA, WA, or WV.</p>"
        }
      ]
    },
    {
      "type": "power_reviews_plugin",
      "name": "Power Reviews",
      "settings": [
        {
          "type": "checkbox",
          "id": "pr_snippet_enabled",
          "label": "PowerReviews Snippet",
          "default": true,
          "info": "Enable the checkbox to show the Review Snippet content container."
        }
      ]
    },
    {
      "type": "variant_sku",
      "name": "Variant SKU",
      "settings": [
        {
          "type": "text",
          "id": "variant_label",
          "label": "Label",
          "default": "Item&colon;&nbsp;"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "default": true,
      "label": "t:sections.main-product.settings.enable_sticky_info.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header.content",
      "info": "t:sections.main-product.settings.header.info"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    },
    {
      "type": "textarea",
      "id": "variant_images",
      "label": "Variant image metafields",
      "default": "my_fields.open_box_image\nmy_fields.closed_box_image\nmy_fields.whats_inside_image\nmy_fields.individual_pieces_image\nmy_fields.nutritional_label",
      "info": "Specifies the variant image metafields that are displayed in the image carousel, and in which order.\n\nNamespace and key only (period-delimited), with multiple metafields separated by new lines."
    }
  ]
}
{% endschema %}
